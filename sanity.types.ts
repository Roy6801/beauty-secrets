/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type ActionButton = {
  _type: "actionButton";
  name?: string;
  href?: string;
  primary?: boolean;
  external?: boolean;
  iconRight?: string;
  iconLeft?: string;
};

export type PageSection = {
  _id: string;
  _type: "pageSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  category?: "about" | "contact" | "gallery" | "hero" | "services" | "testimonials";
  section?: string;
  ContactWithForm?: {
    sectionId?: string;
    title?: string;
    highlightText?: string;
    titleSuffix?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    formTitle?: string;
    formSubmitText?: string;
    formEndpoint?: string;
    contactInfo?: Array<{
      type?: "address" | "phone" | "email" | "hours";
      icon?: string;
      content?: string;
      hoursDetails?: Array<string>;
      _key: string;
    }>;
    socialLinks?: Array<{
      platform?: string;
      icon?: string;
      url?: string;
      _key: string;
    }>;
    serviceOptions?: Array<{
      label?: string;
      value?: string;
      _key: string;
    }>;
  };
  TestimonialCards?: {
    sectionId?: string;
    title?: string;
    highlightText?: string;
    titleSuffix?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    testimonials?: Array<{
      name?: string;
      service?: string;
      comment?: string;
      rating?: number;
      avatar?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      _key: string;
    }>;
  };
  ImageGallery?: {
    sectionId?: string;
    title?: string;
    highlightText?: string;
    titleSuffix?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    columns?: 2 | 3 | 4;
    images?: Array<{
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      title?: string;
      _type: "image";
      _key: string;
    }>;
    viewMoreLink?: string;
    viewMoreText?: string;
  };
  ImageWithContent?: {
    sectionId?: string;
    title?: string;
    highlightText?: string;
    titleSuffix?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    imagePosition?: "left" | "right";
    actions?: Array<{
      _key: string;
    } & ActionButton>;
  };
  HeroWithBackground?: {
    sectionId?: string;
    title?: string;
    highlightText?: string;
    titleSuffix?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    heroImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    actions?: Array<{
      _key: string;
    } & ActionButton>;
  };
  ServiceGrid?: {
    sectionId?: string;
    title?: string;
    highlightText?: string;
    titleSuffix?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    services?: Array<{
      name?: string;
      description?: string;
      price?: number;
      icon?: string;
      learnMoreLink?: string;
      _key: string;
    }>;
  };
};

export type Metadata = {
  _type: "metadata";
  title?: string;
  description?: string;
  useVercelOG?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  ogTemplate?: {
    templateType?: "default" | "featured";
    defaultTemplate?: {
      title?: string;
      highlightText?: string;
      titleSuffix?: string;
    };
    featuredTemplate?: {
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      icon?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      title?: string;
      tagline?: string;
      frame?: "default" | "cover" | "mobile";
    };
  };
  siteName?: string;
  openGraph?: {
    type?: "website" | "article" | "profile" | "book" | "video" | "music";
  };
  twitter?: {
    card?: "summary_large_image" | "summary" | "app" | "player";
  };
};

export type DynamicPage = {
  _id: string;
  _type: "dynamicPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  sections?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "pageSection";
  }>;
  metadata?: {
    title?: string;
    description?: string;
    useVercelOG?: boolean;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    ogTemplate?: {
      templateType?: "default" | "featured";
      defaultTemplate?: {
        title?: string;
        highlightText?: string;
        titleSuffix?: string;
      };
      featuredTemplate?: {
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        icon?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        title?: string;
        tagline?: string;
        frame?: "default" | "cover" | "mobile";
      };
    };
    siteName?: string;
    openGraph?: {
      type?: "website" | "article" | "profile" | "book" | "video" | "music";
    };
    twitter?: {
      card?: "summary_large_image" | "summary" | "app" | "player";
    };
  };
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Markdown = string;

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | ActionButton | PageSection | Metadata | DynamicPage | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Slug | Markdown;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/features/dynamic-page/queries.ts
// Variable: ALL_DYNAMIC_PAGES_QUERY
// Query: *[_type == "dynamicPage"]{	"slug": slug.current,	}
export type ALL_DYNAMIC_PAGES_QUERYResult = Array<{
  slug: string | null;
}>;
// Variable: DYNAMIC_PAGE_QUERY
// Query: *[_type == "dynamicPage" && slug.current == $slug][0]{	title,	"slug": slug.current,	"sections": sections[]->{		title,		category,		section,	}}
export type DYNAMIC_PAGE_QUERYResult = {
  title: string | null;
  slug: string | null;
  sections: Array<{
    title: string | null;
    category: "about" | "contact" | "gallery" | "hero" | "services" | "testimonials" | null;
    section: string | null;
  }> | null;
} | null;
// Variable: DYNAMIC_PAGE_METADATA_QUERY
// Query: *[_type == "dynamicPage" && slug.current == $slug][0]{		title,		"slug": slug.current,		"metadata": metadata{			title,			description,			useVercelOG,			"imageUrl": image.asset->url,			siteName,			ogTemplate{				templateType,				defaultTemplate{					title,					highlightText,					titleSuffix,				},				featuredTemplate{					"imageUrl": image.asset->url,					"iconUrl": icon.asset->url,					title,					tagline,					frame,				}			},			openGraph{				type,			},			twitter{				card,			}		}	}
export type DYNAMIC_PAGE_METADATA_QUERYResult = {
  title: string | null;
  slug: string | null;
  metadata: {
    title: string | null;
    description: string | null;
    useVercelOG: boolean | null;
    imageUrl: string | null;
    siteName: string | null;
    ogTemplate: {
      templateType: "default" | "featured" | null;
      defaultTemplate: {
        title: string | null;
        highlightText: string | null;
        titleSuffix: string | null;
      } | null;
      featuredTemplate: {
        imageUrl: string | null;
        iconUrl: string | null;
        title: string | null;
        tagline: string | null;
        frame: "cover" | "default" | "mobile" | null;
      } | null;
    } | null;
    openGraph: {
      type: "article" | "book" | "music" | "profile" | "video" | "website" | null;
    } | null;
    twitter: {
      card: "app" | "player" | "summary_large_image" | "summary" | null;
    } | null;
  } | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"dynamicPage\"]{\n\t\"slug\": slug.current,\n\t}": ALL_DYNAMIC_PAGES_QUERYResult;
    "\n\t*[_type == \"dynamicPage\" && slug.current == $slug][0]{\n\ttitle,\n\t\"slug\": slug.current,\n\t\"sections\": sections[]->{\n\t\ttitle,\n\t\tcategory,\n\t\tsection,\n\t}\n}": DYNAMIC_PAGE_QUERYResult;
    "\n\t*[_type == \"dynamicPage\" && slug.current == $slug][0]{\n\t\ttitle,\n\t\t\"slug\": slug.current,\n\t\t\"metadata\": metadata{\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\tuseVercelOG,\n\t\t\t\"imageUrl\": image.asset->url,\n\t\t\tsiteName,\n\t\t\togTemplate{\n\t\t\t\ttemplateType,\n\t\t\t\tdefaultTemplate{\n\t\t\t\t\ttitle,\n\t\t\t\t\thighlightText,\n\t\t\t\t\ttitleSuffix,\n\t\t\t\t},\n\t\t\t\tfeaturedTemplate{\n\t\t\t\t\t\"imageUrl\": image.asset->url,\n\t\t\t\t\t\"iconUrl\": icon.asset->url,\n\t\t\t\t\ttitle,\n\t\t\t\t\ttagline,\n\t\t\t\t\tframe,\n\t\t\t\t}\n\t\t\t},\n\t\t\topenGraph{\n\t\t\t\ttype,\n\t\t\t},\n\t\t\ttwitter{\n\t\t\t\tcard,\n\t\t\t}\n\t\t}\n\t}": DYNAMIC_PAGE_METADATA_QUERYResult;
  }
}
